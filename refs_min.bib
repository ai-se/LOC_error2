@misc{CLCS03,
  title =	 "NASA to Shut Down Checkout \& Launch Control System",
  author =	 "Spareref.com",
  year =	 "August 26, 2002",
  note =
                  "\url{http://www.spaceref.com/news/viewnews.html?id=475}"
}
@article{boehm2000software,
  title={Software development cost estimation approaches—A survey},
  author={Boehm, Barry and Abts, Chris and Chulani, Sunita},
  journal={Annals of software engineering},
  volume={10},
  number={1-4},
  pages={177--205},
  year={2000},
  publisher={Springer}
}

@techreport{madachy2008comparative,
  title={Comparative Analysis of COCOMO II, SEER-SEM and True-S Software Cost Models},
  author={Madachy, Raymond and Boehm, Barry},
  year=2008,
  number=" USC-CSSE-2008-816",
  institution="University of Southern California"
}

@article{shepperd1997estimating,
  title={Estimating software project effort using analogies},
  author={Shepperd, Martin and Schofield, Chris},
  journal={IEEE Transactions on software engineering},
  volume={23},
  number={11},
  pages={736--743},
  year={1997},
  publisher={IEEE}
}
@misc{goll04,
author=" K. Gollapudi",
title="Function points or lines of code? - an
insight",
journal=" Global Microsoft Business Unit, Wipro
Technologies",
year=2004
}
@misc{dij88,
year=1988,
 author="E. W. Dijkstra",
 title="On the cruelty of really teaching computing science",
  howpublished = {\url{http://www.cs.utexas.edu/users/EWD/ewd10xx/EWD1036.PDF}},
  note = {Accessed: 2016-11-30}
  }

@Book{boehm81,
  Author =	 "B. Boehm",
  Title =	 "Software Engineering Economics",
  Publisher =	 "Prentice Hall",
  Year =	 1981
}

@inProceedings{lum02,
  author =	 "K. Lum and J. Powell and J. Hihn",
  title =	 "Validation of Spacecraft Software Cost Estimation
                  Models for Flight and Ground Systems",
  booktitle =	 "ISPA Conference Proceedings, Software Modeling
                  Track",
  month =	 "May",
  year =	 2002
}

@ARTICLE{jorgensen09,
  author =	 {J{\o}rgensen, Magne and Gruschke, Tanja M.},
  journal =	 {Software Engineering, IEEE Transactions on},
  title =	 {The Impact of Lessons-Learned Sessions on Effort
                  Estimation and Uncertainty Assessments},
  year =	 2009,
  month =	 {May-June },
  volume =	 35,
  number =	 3,
  pages =	 {368 -383},
}

@ARTICLE{koc11b,
  author =	 "E. Kocaguneli and T. Menzies and A. Bener and
                  J. Keung",
  journal =	 "IEEE Transactions on Software Engineering",
  title =	 "Exploiting the Essential Assumptions of
                  Analogy-Based Effort Estimation",
  year =	 2012,
  volume =	 28,
  issue =	 2,
  pages =	 "425-438",
  note =	 "Available from
                  \url{http://menzies.us/pdf/11teak.pdf}",
  class =	 "hJ"
}
@article{Kocaguneli2012z,
 author = {Kocaguneli, Ekrem and Menzies, Tim and Keung, Jacky},
 title = {On the Value of Ensemble Effort Estimation},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {November 2012},
 volume = {38},
 number = {6},
 month = nov,
 year = {2012},
 issn = {0098-5589},
 pages = {1403--1416},
 numpages = {14},
 url = {http://dx.doi.org/10.1109/TSE.2011.111},
 doi = {10.1109/TSE.2011.111},
 acmid = {2420784},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Costs,Software performance,Measurement uncertainty,Taxonomy,Machine learning,Regression tree analysis,Support vector machines,Neural networks,k-NN,Software cost estimation,ensemble,machine learning,regression trees,support vector machines,neural nets,analogy},
}


@inproceedings{Minku2013,
abstract = {Context: Ensembles of learning machines and locality are considered two important topics for the next research frontier on Software Effort Estimation (SEE). Objectives We aim at (1) evaluating whether existing automated ensembles of learning machines generally improve SEEs given by single learning machines and which of them would be more useful; (2) analysing the adequacy of different locality approaches; and getting insight on (3) how to improve SEE and (4) how to evaluate/choose machine learning (ML) models for SEE. Method A principled experimental framework is used for the analysis and to provide insights that are not based simply on intuition or speculation. A comprehensive experimental study of several automated ensembles, single learning machines and locality approaches, which present features potentially beneficial for SEE, is performed. Additionally, an analysis of feature selection and regression trees (RTs), and an investigation of two tailored forms of combining ensembles and locality are performed to provide further insight on improving SEE. Results Bagging ensembles of RTs show to perform well, being highly ranked in terms of performance across different data sets, being frequently among the best approaches for each data set and rarely performing considerably worse than the best approach for any data set. They are recommended over other learning machines should an organisation have no resources to perform experiments to chose a model. Even though RTs have been shown to be more reliable locality approaches, other approaches such as k-Means and k-Nearest Neighbours can also perform well, in particular for more heterogeneous data sets. Conclusion Combining the power of automated ensembles and locality can lead to competitive results in SEE. By analysing such approaches, we provide several insights that can be used by future research in the area. ?? 2012 Elsevier B.V. All rights reserved.},
author = {Minku, Leandro L. and Yao, Xin},
booktitle = {Information and Software Technology},
doi = {10.1016/j.infsof.2012.09.012},
isbn = {0950-5849},
issn = {09505849},
keywords = {Empirical validation,Ensembles of learning machines,Keywords,Locality,Software effort estimation},
number = {8},
pages = {1512--1528},
title = {{Ensembles and locality: Insight on improving software effort estimation}},
volume = {55},
year = {2013}
}

@INPROCEEDINGS{garg15, 
author={S. Garg and D. Gupta}, 
booktitle={Industrial Engineering and Operations Management (IEOM), 2015 International Conference on}, 
title={PCA based cost estimation model for agile software development projects}, 
year={2015}, 
pages={1-7}, 
keywords={constraint handling;principal component analysis;project management;software cost estimation;software development management;software metrics;software prototyping;MMRE value;PCA based cost estimation model;agile manifestos;agile software development projects;constraint programming;constraint solving approach;expert opinion;lifecycle models;principal component analysis;software engineering methodology;Complexity theory;ISO Standards;MATLAB;agile development;factor analysis principal components analysis;software cost estimation}, 
doi={10.1109/IEOM.2015.7228109}, 
month={March},}

@ARTICLE{me13a,
  author = {Ekrem Kocaguneli and Tim Menzies and Jacky Keung and David Cok and
	Ray Madachy},
  title = {Active Learning and Effort Estimation: Finding the Essential Content
	of Software Effort Estimation Data},
  journal = {IEEE Transactions on Software Engineering},
  year = {2013},
  volume = {39},
  pages = {1040-1053},
  number = {8},
}

@inproceedings{Sarro16,
 author = {Sarro, Federica and Petrozziello, Alessio and Harman, Mark},
 title = {Multi-objective Software Effort Estimation},
 booktitle = {Proceedings of the 38th International Conference on Software Engineering},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {619--630},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884830},
 doi = {10.1145/2884781.2884830},
 acmid = {2884830},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {confidence interval, estimates uncertainty, multi-objective evolutionary algorithm, software effort estimation},
}
@techreport{Garlan:1994,
 author = {Garlan, David and Shaw, Mary},
 title = {An Introduction to Software Architecture},
 year = {1994},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Acmucs%3ACMU%2F%2FCS-94-166},
 publisher = {Carnegie Mellon University},
 address = {Pittsburgh, PA, USA},
} 

@ARTICLE{Chen:05, 
author={Z. Chen and T. Menzies and D. Port and D. Boehm}, 
journal={IEEE Software}, 
title={Finding the right data for software cost modeling}, 
year={2005}, 
volume={22}, 
number={6}, 
pages={38-46}, 
keywords={project management;software cost estimation;software management;data collection;data-pruning method;real-world data set;resource management;software cost model;software engineering;software project management;Costs;Databases;Financial management;Predictive models;Project management;Radio access networks;Remote monitoring;Resource management;Scheduling;State estimation;COCOMO;cost modeling;feature subset selection;software engineering;time estimation;wrapper}, 
doi={10.1109/MS.2005.151}, 
ISSN={0740-7459}, 
month={Nov},}

@article{Parnas:1972,
 author = {Parnas, D. L.},
 title = {On the Criteria to Be Used in Decomposing Systems into Modules},
 journal = {Commun. ACM},
 issue_date = {Dec. 1972},
 volume = {15},
 number = {12},
 month = dec,
 year = {1972},
 issn = {0001-0782},
 pages = {1053--1058},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/361598.361623},
 doi = {10.1145/361598.361623},
 acmid = {361623},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {KWIC index, modularity, modules, software, software design, software engineering},
} 


@Article{Menzies2016,
author="Menzies, Tim
and Yang, Ye
and Mathew, George
and Boehm, Barry
and Hihn, Jairus",
title="Negative results for software effort estimation",
journal="Empirical Software Engineering",
year="2016",
pages="1--26",
abstract="More than half the literature on software effort estimation (SEE) focuses on comparisons of new estimation methods. Surprisingly, there are no studies comparing state of the art latest methods with decades-old approaches. Accordingly, this paper takes five steps to check if new SEE methods generated better estimates than older methods. Firstly, collect effort estimation methods ranging from ``classical'' COCOMO (parametric estimation over a pre-determined set of attributes) to ``modern'' (reasoning via analogy using spectral-based clustering plus instance and feature selection, and a recent ``baseline method'' proposed in ACM Transactions on Software Engineering). Secondly, catalog the list of objections that lead to the development of post-COCOMO estimation methods. Thirdly, characterize each of those objections as a comparison between newer and older estimation methods. Fourthly, using four COCOMO-style data sets (from 1991, 2000, 2005, 2010) and run those comparisons experiments. Fifthly, compare the performance of the different estimators using a Scott-Knott procedure using (i) the A12 effect size to rule out ``small'' differences and (ii) a 99 {\%} confident bootstrap procedure to check for statistically different groupings of treatments. The major negative result of this paper is that for the COCOMO data sets, nothing we studied did any better than Boehms original procedure. Hence, we conclude that when COCOMO-style attributes are available, we strongly recommend (i) using that data and (ii) use COCOMO to generate predictions. We say this since the experiments of this paper show that, at least for effort estimation, how data is collected is more important than what learner is applied to that data.",
issn="1573-7616",
doi="10.1007/s10664-016-9472-2",
url="http://dx.doi.org/10.1007/s10664-016-9472-2"
}

@Article{Menzies2016b,
author="Menzies, Tim
and Nichols, William
and Shull, Forrest
and Layman, Lucas",
title="Are delayed issues harder to resolve? Revisiting cost-to-fix of defects throughout the lifecycle",
journal="Empirical Software Engineering",
year="2016",
pages="1--33",
abstract="Many practitioners and academics believe in a delayed issue effect (DIE); i.e. the longer an issue lingers in the system, the more effort it requires to resolve. This belief is often used to justify major investments in new development processes that promise to retire more issues sooner. This paper tests for the delayed issue effect in 171 software projects conducted around the world in the period from 2006--2014. To the best of our knowledge, this is the largest study yet published on this effect. We found no evidence for the delayed issue effect; i.e. the effort to resolve issues in a later phase was not consistently or substantially greater than when issues were resolved soon after their introduction. This paper documents the above study and explores reasons for this mismatch between this common rule of thumb and empirical data. In summary, DIE is not some constant across all projects. Rather, DIE might be an historical relic that occurs intermittently only in certain kinds of projects. This is a significant result since it predicts that new development processes that promise to faster retire more issues will not have a guaranteed return on investment (depending on the context where applied), and that a long-held truth in software engineering should not be considered a global truism.",
issn="1573-7616",
doi="10.1007/s10664-016-9469-x",
url="http://dx.doi.org/10.1007/s10664-016-9469-x"
}


@Book{boehm00b,
  Author =	 "Barry Boehm and Ellis Horowitz and Ray Madachy and
                  Donald Reifer and Bradford K. Clark and Bert Steece
                  and A. Winsor Brown and Sunita Chulani and Chris
                  Abts",
  Title =	 "Software Cost Estimation with Cocomo II",
  Publisher =	 "Prentice Hall",
  Year =	 2000,
  ibsn =	 0130266922,
}

@inproceedings{passos11,
  title =	 "Analyzing the Impact of Beliefs in Software Project
                  Practices",
  author =	 "Carol Passos and Ana Paula Braun and Daniela
                  S. Cruzes and Manoel Mendonca",
  year =	 2011,
  booktitle =	 "ESEM'11"
}

@inproceedings{prem16,
  title={Belief \& evidence in empirical software engineering},
  author={Devanbu, Prem and Zimmermann, Thomas and Bird, Christian},
  booktitle={Proceedings of the 38th International Conference on Software Engineering},
  pages={108--119},
  year={2016},
  organization={ACM}
}
@article{aha1991instance,
  title={Instance-based learning algorithms},
  author={Aha, David W and Kibler, Dennis and Albert, Marc K},
  journal={Machine learning},
  volume={6},
  number={1},
  pages={37--66},
  year={1991},
  publisher={Springer}
}

@article{betten14,
year={2014},
issn={1382-3256},
journal={Empirical Software Engineering},
doi={10.1007/s10664-013-9292-6},
title={Towards improving statistical modeling of software engineering data: think locally, act globally!},
url={http://dx.doi.org/10.1007/s10664-013-9292-6},
publisher={Springer US},
keywords={Software metrics; Statistical modeling; Clustering},
author={Bettenburg, Nicolas and Nagappan, Meiyappan and Hassan, Ahmed E.},
pages={1-42},
language={English}
}

@article{yang13,
  author =	 {Ye Yang and Zhimin He and Ke Mao and Qi Li and Vu
                  Nguyen and Barry W. Boehm and Ricardo Valerdi},
  title =	 {Analyzing and handling local bias for calibrating
                  parametric cost estimation models},
  journal =	 {Information {\&} Software Technology},
  volume =	 55,
  number =	 8,
  year =	 2013,
  pages =	 {1496-1511},
  ee =		 {http://dx.doi.org/10.1016/j.infsof.2013.03.002},
  bibsource =	 {DBLP, http://dblp.uni-trier.de}
}

@article{me12d,
  author    = {Tim Menzies and
               Andrew Butcher and
               David R. Cok and
               Andrian Marcus and
               Lucas Layman and
               Forrest Shull and
               Burak Turhan and
               Thomas Zimmermann},
  title     = {Local versus Global Lessons for Defect Prediction and Effort
               Estimation},
  journal   = {IEEE Trans. Software Eng.},
  volume    = {39},
  number    = {6},
  year      = {2013},
  pages     = {822-834},
 class =	 "hJ",
  note =	 "Available from
                  \url{http://menzies.us/pdf/12localb.pdf}",

}


@inproceedings{ray2014lang, 
   title={A Large Scale Study of Programming Languages and Code Quality in Github}, 
   author={Ray, Baishakhi and Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar}, 
   booktitle={Proceedings of the ACM SIGSOFT 22nd International Symposium on the 
             Foundations of Software Engineering}, 
   series = {FSE '14}, 
   year={2014}, 
   organization={ACM} 
}

@ARTICLE{Walkerden1999,
  author =	 {Walkerden, Fiona and Jeffery, Ross},
  title =	 {An Empirical Study of Analogy-based Software Effort
                  Estimation},
  journal =	 {Empirical Softw. Engg.},
  year =	 1999,
  volume =	 4,
  pages =	 {135--158},
  number =	 2,
  address =	 {Hingham, MA, USA},
  doi =		 {http://dx.doi.org/10.1023/A:1009872202035},
  issn =	 {1382-3256},
  publisher =	 {Kluwer Academic Publishers}
}

@inproceedings{kirsopp2003empirical,
  title={An empirical analysis of linear adaptation techniques for case-based prediction},
  author={Kirsopp, Colin and Mendes, Emilia and Premraj, Rahul and Shepperd, Martin},
  booktitle={International Conference on Case-Based Reasoning},
  pages={231--245},
  year={2003},
  organization={Springer}
}

@article{jorgensen2003software,
  title={Software effort estimation by analogy and “regression toward the mean”},
  author={J{\o}rgensen, Magne and Indahl, Ulf and Sj{\o}berg, Dag},
  journal={Journal of Systems and Software},
  volume={68},
  number={3},
  pages={253--262},
  year={2003},
  publisher={Elsevier}
}

@article{boehm2008achievements,
  title={Achievements and challenges in cocomo-based software resource estimation},
  author={Boehm, Barry W and Valerdi, Ricardo},
  journal={IEEE software},
  volume={25},
  number={5},
  pages={74--83},
  year={2008},
  publisher={IEEE}
}

@inproceedings{rehesaar96,
  title={ISO/IEC Functional Size Measurement Standards},
  author={Rehesaar, Hugo},
  booktitle={Gufpi/Ifpug Conf. Software Measurement and Management},
  publisher={Int'l Function Point Users Group},
  pages={311--318},
  year={1996}
}

@article{Jorgensen2004,
	Author = {Jorgensen, Magne},
	Doi = {10.1016/S0164-1212(02)00156-5},
	Issn = {01641212},
	Journal = {Journal of Systems and Software},
	Keywords = {e ort estimation,expert judgment,project planning,software development},
	Month = feb,
	Number = {1-2},
	Pages = {37--60},
	Title = {{A review of studies on expert estimation of software development effort}},
	Volume = {70},
	Year = {2004},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/S0164-1212(02)00156-5}}
	
@misc{jorg15,
title="The world is skewed: Ignorance, use, misuse, misunderstandings, and how to improve uncertainty analyses in software development projects ",
author="M. Jorgensen",
year=2015,
note="CREST workshop, 2015, http://goo.gl/0wFHLZ"
}

@article{molokk08,
journal="Journal of Systems and Software",
volume=81, 
issue=12,
month="December",
year= 2008, 
pages="2106–2117",
title="Using planning poker for combining expert estimates in software projects",
author="Kjetil Molokken-Pstvold and Nils Christian Haugen and Hans Christian Benestad",
}

@article{Albrecht83,
 author = {Albrecht, A. J. and Gaffney, J. E.},
 title = {Software Function, Source Lines of Code, and Development Effort Prediction: A Software Science Validation},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {November 1983},
 volume = {9},
 number = {6},
 month = nov,
 year = {1983},
 issn = {0098-5589},
 pages = {639--648},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/TSE.1983.235271},
 doi = {10.1109/TSE.1983.235271},
 acmid = {1313875},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Cost estimating, function points, software linguistics, software linguistics, Cost estimating, function points},
}

@inproceedings{jones07a,
title="Software Code Growth: A New Approach Based on an Analysis of Historical Actuals",
author="R. Jones, P. Hardin",
year=2007,
booktitle="DNI Cost Analysis Improvement Group",
notes="Available from http://goo.gl/cxqkvI"
}

@book{breiman1984classification,
  title={Classification and regression trees},
  author={Breiman, Leo and Friedman, Jerome and Stone, Charles J and Olshen, Richard A},
  year={1984},
  publisher={CRC press}
}
@article{breiman2001random,
  title={Random forests},
  author={Breiman, Leo},
  journal={Machine learning},
  volume={45},
  number={1},
  pages={5--32},
  year={2001},
  publisher={Springer}
}

@INPROCEEDINGS{arcuri11,
author={Arcuri, A. and Briand, L.}, 
booktitle={ICSE'11},
title={A practical guide for using statistical tests to assess randomized algorithms in software engineering}, 
year={2011}, 
pages={1-10}}



@book{efron93,
  author =	 "Efron, Bradley and Tibshirani, Robert J",
  title =	 "An introduction to the bootstrap",
  publisher =	 "Chapman and Hall",
  address =	 "London",
  series =	 "Mono. Stat. Appl. Probab.",
  year =	 1993,
}

@article{shepperd12a,
  author =	 {Martin J. Shepperd and Steven G. MacDonell},
  title =	 {Evaluating prediction systems in software project
                  estimation},
  journal =	 {Information {\&} Software Technology},
  volume =	 54,
  number =	 8,
  year =	 2012,
  pages =	 {820-827},
}

@article{kampenes07,
  author =	 {Vigdis By Kampenes and Tore Dyb{\aa} and Jo Erskine
                  Hannay and Dag I. K. Sj{\o}berg},
  title =	 {A systematic review of effect size in software
                  engineering experiments},
  journal =	 {Information {\&} Software Technology},
  volume =	 49,
  number =	 {11-12},
  year =	 2007,
  pages =	 {1073-1086},
}

@inproceedings{kocharm13,
  author    = {Ekrem Kocaguneli and
               Thomas Zimmermann and
               Christian Bird and
               Nachiappan Nagappan and
               Tim Menzies},
  title     = {Distributed development considered harmful?},
  booktitle = {ICSE},
  year      = {2013},
  pages     = {882-890},
  ee        = {http://dl.acm.org/citation.cfm?id=2486908},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@mastersThesis{baker07,
  title =	 "A Hybrid Approach to Expert and Model-based Effort
                  Estimation ",
  author =	 "Dan Baker",
  year =	 2007,
  school =	 "Lane Department of Computer Science and Electrical
                  Engineering, West Virginia University",
  note =	 "Available from
                  \url{https://eidr.wvu.edu/etd/documentdata.eTD?documentid=5443}"
}

@article{boehm1995cost,
  title={Cost models for future software life cycle processes: COCOMO 2.0},
  author={Boehm, Barry and Clark, Bradford and Horowitz, Ellis and Westland, Chris and Madachy, Ray and Selby, Richard},
  journal={Annals of software engineering},
  volume={1},
  number={1},
  pages={57--94},
  year={1995},
  publisher={Springer}
}

@inproceedings{valerdi11,
  booktitle =	 "Incose International Symposium, Denver, USA",
  year =	 2011,
  author =	 "R. Valerdi",
  title =	 "Convergence of Expert Opinion via the Wideband
                  Delphi Method: An Application in Cost Estimation
                  Models",
  note =	 "Available from http://goo.gl/Zo9HT"
}

@article{mittas13,
  author =	 {Nikolaos Mittas and Lefteris Angelis},
  title =	 {Ranking and Clustering Software Cost Estimation
                  Models through a Multiple Comparisons Algorithm},
  journal =	 {IEEE Trans. Software Eng.},
  volume =	 39,
  number =	 4,
  year =	 2013,
  pages =	 {537-551},
}

@article{boehm00a,
  author =	 "B. Boehm",
  title =	 "Safe and Simple Software Cost Analysis",
  journal =	 "IEEE Software",
  pages =	 "14-17",
  month =	 "September/October",
  year =	 2000,
}
